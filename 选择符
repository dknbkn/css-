上下文选择符
  标签1 标签2 {声明}
    只要有标签在它的层次结构“上游”存在这么一个祖先，那么就会选中该标签。无论从该标签到作为 祖先的上下文之间隔着多少层次都没有关系。
    只要标签2的"上游"存在标签1,所有标签2被选中.
子选择符
  标签 1 > 标签 2
    这个选择符中的标签 1 不能是标签 2 的父元素之外的其他 祖先元素.
      只有标签1下的标签2被选中,其它皆不被选中.
紧邻同胞选择符+
  标签 1 + 标签 2 
    标签 2必须紧跟在其同胞标签 1的后面
      只有紧跟着标签1的标签2被选中.
一般同胞选择符
  标签 1 ~ 标签 2 
    标签 2必须跟（不一定紧跟）在其同胞标签 1后面。 
通用选择符
  * {color:green;} 
    它匹配任何元素
类选择符
  .类名
标签带类选择符 
  p.specialtext {color:red;}
    只想瞄准带有这个类的段落，可以把标签名和类选择符写在一块
多类选择符 
  <p class="specialtext featured">Here the span tag <span>may or may not</span>     be styled.</p>
    可以给元素添加多个类
      在css中这样写:
        .specialtext.featured {font-size:120%;} 
        表示选择同时具有这两个类名的那个元素
 ID选择符
  #ID
    #specialtext {CSS 样式声明}
 属性选择符
  标签名[属性名] 
    选择任何带有属性名的标签名
      img[title] {border:2px solid blue;} 
      会导致像下面这个带有 title 属性的 HTML img 元素显示 2像素宽的蓝色边框，至于 title 属性有什么值，无关紧要.
 属性值选择符 
  标签名[属性名="属性值"] 
    选择任何带有值为属性值的属性名的标签名
      img[title="red flower"] {border:4px solid green;} 
        在图片的 title 属性值为 red flower 的情况下，才会为图片添加边框
        
 ID和类的用法
    在页面中唯一地标识一个元素;
    类的目的是为了标识一组具有相同特征的元素.
 
      
    
